name: Combine Releases

on:
  # Run on pushes to main branch in the main repository
  push:
    branches:
      - main
  
  # Run on release events in the main repository
  release:
    types: [published, edited, prereleased]
  
  # Run when manually triggered
  workflow_dispatch:
  
  # Run when triggered by module repositories
  repository_dispatch:
    types: [module_release_created]
  
  # Run once a day to catch any missed updates
  schedule:
    # Run once a day at midnight UTC
    - cron: '0 0 * * *'

permissions:
  pull-requests: write
  contents: write

jobs:
  combine-releases:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_ACTIONS }}
          fetch-depth: 0  # Fetch all history for proper comparisons

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Combine releases into JSON
        env:
          GH_ACTIONS: ${{ secrets.GH_ACTIONS }}
        run: python .github/combine_releases.py

      - name: Check for changes
        id: git-check
        run: |
          git status
          if [[ -n $(git status -s) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected"
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          fi

      - name: Configure Git
        if: steps.git-check.outputs.changes == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      # Alternative approach using direct Git commands instead of create-pull-request action
      - name: Commit and push changes
        if: steps.git-check.outputs.changes == 'true'
        run: |
          # Create a new branch
          git checkout -b update-releases
          
          # Add and commit changes
          git add -A
          git commit -m "Update combined releases JSON"
          
          # Push to the new branch
          git push -f origin update-releases
          
          echo "Changes pushed to update-releases branch"

      # Create PR using GitHub CLI instead of the action
      - name: Create Pull Request with GitHub CLI
        if: steps.git-check.outputs.changes == 'true'
        id: create-pr
        run: |
          # Install GitHub CLI
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-
